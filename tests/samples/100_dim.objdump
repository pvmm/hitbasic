{'code': [('@BeginProgram',),
          ('DIM', ' ', 'A%', '(', 0, ',', ' ', 1, ')'),
          ('LET', ' ', 'A%', '(', 0, ',', ' ', 0, ')', ' ', '=', ' ', 1),
          ('LET', ' ', 'A%', '(', 0, ',', ' ', 1, ')', ' ', '=', ' ', 2),
          ('DIM', ' ', 'X%', '(', 1, ')'),
          ('LET', ' ', 'X%', '(', 0, ')', ' ', '=', ' ', 456),
          ('LET', ' ', 'X%', '(', 1, ')', ' ', '=', ' ', 789),
          ('DIM', ' ', 'Y%', '(', 0, ')'),
          ('LET', ' ', 'Y%', '(', 0, ')', ' ', '=', ' ', 123),
          ('LET', ' ', 'X%', '(', 0, ')', ' ', '=', ' ', 'A%', '(', 0, ',', ' ', 0, ')'),
          ('@EndProgram',),
          ('END',)],
 'symbol_table': {'_global': {'_basic_vars': {<class 'lib.translations.numeric_literal.Single'>: {},
                                              <class 'lib.translations.numeric_literal.Double'>: {},
                                              <class 'lib.translations.numeric_literal.Integer'>: {'A%()': BASICVar(A%()),
                                                                                                   'X%()': BASICVar(X%()),
                                                                                                   'Y%()': BASICVar(Y%())},
                                              <class 'lib.translations.string_literal.String'>: {}},
                              '_builtins': {'Atn()': BuiltIn(ATN()),
                                            'Chr$()': BuiltIn(CHR$()),
                                            'Chr()': BuiltIn(CHR$())},
                              '_functions': {},
                              '_hitbasic_vars': {'a()': BASICVar(A%()), 'x()': BASICVar(X%()), 'y()': BASICVar(Y%())},
                              '_labels': {'BeginProgram': 10, 'EndProgram': 'EndProgram'},
                              '_prefix_counters': {}}}}
